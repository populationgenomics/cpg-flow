name: Package
on:
  # Building on pull-requests, manual dispatch, and pushes to main; but restricting
  # publishing only to main pushes and manual dispatch with `if`s in specific steps.
  workflow_dispatch:
  push:
    branches:
      - alpha
      - main

permissions:
  id-token: write
  contents: write

jobs:
  package:
    name: Package
    environment: production
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.sha }}
          ssh-key: ${{ secrets.DEPLOY_KEY }}

      - name: Setup | Force correct release branch on workflow sha
        run: |
          git checkout -B ${{ github.ref_name }} ${{ github.sha }}

      - name: Setup SSH for deploy key (if using SSH key for git operations)
        env:
          DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$DEPLOY_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          export GIT_SSH_COMMAND="ssh -i ~/.ssh/deploy_key"

      - name: Action | Semantic Version Release
        id: release
        uses: python-semantic-release/python-semantic-release@v9.14.0
        with:
          root_options: "-vvv"
          git_committer_email: "actions@users.noreply.github.com"
          git_committer_name: "github-actions"
          github_token: ${{ secrets.GITHUB_TOKEN }}
          ignore_token_for_push: true
          ssh_private_signing_key: ${{ secrets.DEPLOY_KEY }}

      - name: Publish | Upload package to PyPI
        uses: pypa/gh-action-pypi-publish@v1.12.2
        if: steps.release.outputs.released == 'true'
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

      - name: Publish | Upload to GitHub Release Assets
        uses: python-semantic-release/publish-action@v9.8.9
        if: steps.release.outputs.released == 'true'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.release.outputs.tag }}
