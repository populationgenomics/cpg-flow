# Simple workflow for deploying static content to GitHub Pages
name: Deploy API Documentation

on:
  # Run after Test
  workflow_run:
    workflows: ["Test"]
    types:
      - completed

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  id-token: write
  contents: read
  pages: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    if: github.event.workflow_run.conclusion == 'success' && (github.base_ref == 'alpha' || github.base_ref == 'main')
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.CI_BOT_ACCESS_TOKEN }}
          fetch-depth: 0 # Ensure the full history is fetched for merging

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Install dependencies
        run: uv sync

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Build alpha docs
        run: |
          git checkout alpha
          make docs BRANCH=alpha

      - name: Build main docs
        run: |
          git checkout main
          make docs BRANCH=main

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload documentation folder
          path: 'docs/generated/'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
